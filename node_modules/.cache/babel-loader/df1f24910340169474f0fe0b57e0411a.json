{"ast":null,"code":"var _jsxFileName = \"/Users/brittanyouellette/Desktop/Files/Personal/Class/Extended/RR-React-Redux-Darkmode-Toggle/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { clearData, fetchData, incrementId, decrementId, inputId } from './features/dataSlice';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.data);\n\n  const renderImg = () => {\n    if (data.apiData) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          'width': '100vw'\n        },\n        src: data.apiData.primaryImage,\n        alt: data.apiData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"image here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [props.objectId, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(fetchData()),\n        children: \"Thunk!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(clearData()),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(incrementId()),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(decrementId()),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: data.objectId,\n      onChange: e => {\n        dispatch(inputId(Number(e.target.value)));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [data.objectId, renderImg()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8ZSi0OBRHkt2uIn6fVrA7mYaxeA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\n\nconst mapStateToProps = (state, ownProps) => ({\n  objectId: state.data.objectId\n});\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brittanyouellette/Desktop/Files/Personal/Class/Extended/RR-React-Redux-Darkmode-Toggle/src/App.js"],"names":["useSelector","useDispatch","connect","clearData","fetchData","incrementId","decrementId","inputId","useEffect","App","props","dispatch","data","state","renderImg","apiData","primaryImage","title","objectId","e","Number","target","value","mapStateToProps","ownProps"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAkD,aAAlD;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,WAA/B,EAA4CC,WAA5C,EAAyDC,OAAzD,QAAwE,sBAAxE;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,IAAI,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;;AAEA,QAAME,SAAS,GAAG,MAAM;AACtB,QAAGF,IAAI,CAACG,OAAR,EAAiB;AACf,0BAAO;AAAK,QAAA,KAAK,EAAE;AAAC,mBAAS;AAAV,SAAZ;AAAgC,QAAA,GAAG,EAAEH,IAAI,CAACG,OAAL,CAAaC,YAAlD;AAAgE,QAAA,GAAG,EAAEJ,IAAI,CAACG,OAAL,CAAaE;AAAlF;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAND;;AAQAT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ,CAACP,SAAS,EAAV,CAAR;AACD,GAFQ,EAEN,CAACM,KAAK,CAACQ,QAAP,EAAiBP,QAAjB,CAFM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMA,QAAQ,CAACP,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMO,QAAQ,CAACR,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMQ,QAAQ,CAACN,WAAW,EAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAMM,QAAQ,CAACL,WAAW,EAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAO,MAAA,KAAK,EAAGM,IAAI,CAACM,QAApB;AAA+B,MAAA,QAAQ,EAAGC,CAAD,IAAO;AAC9CR,QAAAA,QAAQ,CAACJ,OAAO,CAACa,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAAR,CAAR;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAA,iBACGV,IAAI,CAACM,QADR,EAEGJ,SAAS,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAlCQL,G;UACUR,W,EACJD,W;;;KAFNS,G;;AAqCT,MAAMc,eAAe,GAAG,CAACV,KAAD,EAAQW,QAAR,MAAsB;AAAEN,EAAAA,QAAQ,EAAEL,KAAK,CAACD,IAAN,CAAWM;AAAvB,CAAtB,CAAxB;;AAEA,eAAehB,OAAO,CAACqB,eAAD,CAAP,CAAyBd,GAAzB,CAAf","sourcesContent":["import './App.css';\nimport { useSelector, useDispatch, connect } from 'react-redux'\nimport { clearData, fetchData, incrementId, decrementId, inputId } from './features/dataSlice'\nimport { useEffect } from 'react';\n\nfunction App(props) {\n  const dispatch = useDispatch()\n  const data = useSelector((state) => state.data)\n\n  const renderImg = () => {\n    if(data.apiData) {\n      return <img style={{'width': '100vw'}} src={data.apiData.primaryImage} alt={data.apiData.title} />\n    } else {\n      return <p>image here</p>\n    }\n  }\n\n  useEffect(() => {\n    dispatch(fetchData())\n  }, [props.objectId, dispatch])\n\n\n  return (\n    <div className=\"App\">\n      <div>\n        <button onClick={() => dispatch(fetchData())}>Thunk!</button>\n        <button onClick={() => dispatch(clearData())}>Clear</button>\n        <button onClick={() => dispatch(incrementId())}>Next</button>\n        <button onClick={() => dispatch(decrementId())}>Back</button>\n      </div>\n      <input value={ data.objectId } onChange={(e) => {\n        dispatch(inputId(Number(e.target.value)))\n      }} />\n      <div>\n        {data.objectId}\n        {renderImg()}\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({ objectId: state.data.objectId })\n\nexport default connect(mapStateToProps)(App);"]},"metadata":{},"sourceType":"module"}